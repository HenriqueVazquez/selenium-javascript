{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2022-08-28T21:26:44.759Z",
    "end": "2022-08-28T21:27:07.000Z",
    "duration": 22241,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d5be9ff7-65df-4da3-94a1-afab02c67c60",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8344777e-d1d2-4a2c-8ffc-d9c9e53ed79f",
          "title": "add todo test",
          "fullFile": "C:\\qaninja\\seleniumDemo\\test\\firstTest.js",
          "file": "\\test\\firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to aplication",
              "fullTitle": "add todo test successfully adds a todo to aplication",
              "timedOut": null,
              "duration": 15502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"firefox\").build();\n\n//navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n\n//add a todo\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n\n// assert\nlet todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n  return value;\n});\n//assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n\n//close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "dcf7e009-10b9-4bb9-a155-0ad03248dab4",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dcf7e009-10b9-4bb9-a155-0ad03248dab4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15502,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "8b1c926a-0635-4c10-9848-79033a72b5cb",
          "title": "add another todo test",
          "fullFile": "C:\\qaninja\\seleniumDemo\\test\\secondTest.js",
          "file": "\\test\\secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds another todo to aplication",
              "fullTitle": "add another todo test successfully adds another todo to aplication",
              "timedOut": null,
              "duration": 15438,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"firefox\").build();\n\n//navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n\n//add a todo\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n\n// assert\nlet todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n  return value;\n});\n//assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n\n//close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "8ca75c58-5d18-42b4-9ded-6f3413d6dc86",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adding a new test for reporting",
              "fullTitle": "add another todo test Adding a new test for reporting",
              "timedOut": null,
              "duration": 6339,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"firefox\").build();\n\n//navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n\n//add a todo\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n\n// assert\nlet todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n  return value;\n});\n//assert using chai should\ntodoText.should.equal(\"Learn Javascript\");\n\n//close the browser\nawait driver.quit();",
              "err": {
                "message": "AssertionError: expected 'Learn Selenium' to equal 'Learn Javascript'",
                "estack": "AssertionError: expected 'Learn Selenium' to equal 'Learn Javascript'\n    at Context.<anonymous> (test\\secondTest.js:56:21)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- Learn Selenium\n+ Learn Javascript\n"
              },
              "uuid": "ae9c530b-faad-4c02-a2b1-ff8061e10eb7",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ca75c58-5d18-42b4-9ded-6f3413d6dc86"
          ],
          "failures": [
            "ae9c530b-faad-4c02-a2b1-ff8061e10eb7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 21777,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportFilename": "testResults"
      },
      "version": "6.2.0"
    }
  }
}